@page "/main_menu"

<PageTitle>Menú Principal</PageTitle>

@using Domino_Server.Data
@inject Params Params

<body>
    <EditForm Model="@Params" OnValidSubmit="OnValidSubmit">
        <div class="form-terms">
            <label for="gamemode">Modo de Juego:</label>
            <select class="form-select" aria-label="default" @onchange="@_Gamemode">
                <option value="0" selected>Define una modalidad</option>
                @for (int i = 0; i < Params.Game_Modes.Length; i++)
                {
                    <option value="@i">@Params.Game_Modes[i]</option>
                }
            </select>
        </div>

        <div class="form-terms">
            <label for="gametype">Tipo de Partida:</label>
            <select class="form-select" aria-label="default" @onchange="@_GameType">
                <option value="0" selected>Define un tipo de partida</option>
                @for (int i = 0; i < Params.GameType.Length; i++)
                {
                    <option value="@i">@Params.GameType[i]</option>
                }
            </select>
        </div>
        
        <div class="form-terms">
            <label for="union">Union de Fichas:</label>
            <select class="form-select" aria-label="default" @onchange="@_Union">
                <option value="0" selected>Define la forma de unir las piezas</option>
                @for (int i = 0; i < Params.Union.Length; i++)
                {
                    <option value="@i">@Params.Union[i]</option>
                }
            </select>
        </div>

        <div class="form-terms">
            <label for="comparer">Comparador de valores:</label>
            <select class="form-select" aria-label="default" @onchange="@_Comparer">
                <option value="0" selected>Define un modo de comparar las fichas</option>
                @for (int i = 0; i < Params.Comparer.Length; i++)
                {
                    <option value="@i">@Params.Comparer[i]</option>
                }
            </select>
        </div>

        <div class="form-terms">
            <label for="valor-hand">Valor de la mano:</label>
            <select class="form-select" aria-label="default" @onchange="@_ValorHand">
                <option value="0" selected>Define un modo de determinar el valor de una mano</option>
                @for (int i = 0; i < Params.Valor_Hand.Length; i++)
                {
                    <option value="@i">@Params.Valor_Hand[i]</option>
                }
            </select>
        </div>

        <div class="form-terms">
            <label for="pieces">Fichas en Juego:</label>
            <select class="form-select" aria-label="default" @onchange="@_Pieces">
                <option value="0" selected>Define la cantidad de fichas en juego</option>
                @for (int i = 0; i < Params.Pieces.Length; i++)
                {
                    <option value="@i">@Params.Pieces[i]</option>
                }
            </select>
        </div>

        <div class="form-terms">
            <label for="total-players">Total de Jugadores:</label>
            <select class="form-select" aria-label="default" @onchange="@_NumbOP">
                <option value="0" selected>Define una cantidad de jugadores</option>
                @for (int i = 0; i < Params.NumberOfPlayers.Length; i++)
                {
                    <option value="@i">@Params.NumberOfPlayers[i]</option>
                }
            </select>
        </div>

        <div class="form-terms">
            @for (int i = 0; i < numbOP; i++)
            {
                <label for="number-of-players">Player_@(i+1)</label>
                <select class="form-select" aria-label="default" @onchange="@_PlayersT">
                    <option value="0" selected>Selecciona el tipo de jugador</option>
                    @for (int j = 0; j < Params.PlayersT.Length; j++)
                    {
                        <option value="@j">@Params.PlayersT[j]</option>
                    }
                </select>
            }
        </div>
        
        <div class="form-terms">
            <label for="couples">Equipos:</label>
            <select class="form-select" aria-label="default" @onchange="@_Teams">
                <option value="0" selected>Define los equipos</option>
                @for (int i = 0; i < Params.Teams.Length; i++)
                {
                    <option value="@i">@Params.Teams[i]</option>
                }
            </select>
        </div>

        <div class="form-terms">
            <label for="shuffle">Repartición:</label>
            <select class="form-select" aria-label="default" @onchange="@_Repart">
                <option value="0" selected>Define la forma de repartir las fichas</option>
                @for (int i = 0; i < Params.Repart.Length; i++)
                {
                    <option value="@i">@Params.Repart[i]</option>
                }
            </select>
        </div>

        <div class="form-terms">
            <label for="victory-params">Puntuación:</label>
            <select class="form-select" aria-label="default" @onchange="@_PuntRules">
                <option value="0" selected>Define las reglas de puntuación</option>
                @for (int i = 0; i < Params.VictoryParams.Length; i++)
                {
                    <option value="@i">@Params.VictoryParams[i]</option>
                }
            </select>
        </div>
    </EditForm>

    <button class="starter" onclick="location.href='/GameOn'">Jugar</button>
</body>


@code{
    private int numbOP;
    protected void OnValidSubmit(){
        System.Console.WriteLine("ok");
    }
    public void _Gamemode(ChangeEventArgs gm) => Params._Gamemode(gm.Value.ToString());

    public void _NumbOP(ChangeEventArgs numb){
        Params._NumberOfPlayers(numb.Value.ToString());
        numbOP = Params._NumbOP;
    }
    public void _PlayersT(ChangeEventArgs type) => Params._PlayersT(type.Value.ToString());
    public void _Teams(ChangeEventArgs tm) => Params._MyTeams(tm.Value.ToString());
    public void _Repart(ChangeEventArgs rp) => Params._MyRepart(rp.Value.ToString());
    public void _PuntRules(ChangeEventArgs punt) => Params._PuntRules(punt.Value.ToString());
    public void _Union(ChangeEventArgs union) => Params._Union(union.Value.ToString());
    public void _Comparer(ChangeEventArgs comp) => Params._MyComparer(comp.Value.ToString());
    public void _ValorHand(ChangeEventArgs value) => Params._ValorHand(value.Value.ToString());
    public void _Pieces(ChangeEventArgs piece) => Params._PossiblePieces(piece.Value.ToString());
    public void _GameType(ChangeEventArgs type) => Params._TypeOfGame(type.Value.ToString());
}